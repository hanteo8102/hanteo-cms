{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "DOCUMENTATION",
    "description": "",
    "termsOfService": "YOUR_TERMS_OF_SERVICE_URL",
    "contact": {
      "name": "TEAM",
      "email": "contact-email@something.io",
      "url": "mywebsite.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-generation-date": "06/26/2022 4:04:52 AM"
  },
  "x-strapi-config": {
    "path": "/documentation",
    "showGeneratedFiles": true,
    "generateDefaultResponse": true
  },
  "servers": [
    {
      "url": "http://localhost:1337",
      "description": "Development server"
    },
    {
      "url": "YOUR_STAGING_SERVER",
      "description": "Staging server"
    },
    {
      "url": "YOUR_PRODUCTION_SERVER",
      "description": "Production server"
    }
  ],
  "externalDocs": {
    "description": "Find out more",
    "url": "https://strapi.io/documentation/developer-docs/latest/getting-started/introduction.html"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/article-elements": {
      "get": {
        "deprecated": false,
        "description": "Find all the article-elements's records",
        "responses": {
          "200": {
            "description": "Retrieve article-elements document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Article-elements"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new article-elements record",
        "responses": {
          "200": {
            "description": "Retrieve article-elements document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Article-elements"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewArticle-elements"
              }
            }
          }
        }
      }
    },
    "/article-elements/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the number of article-elements documents",
        "responses": {
          "200": {
            "description": "Retrieve article-elements document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Article-elements"
        ],
        "parameters": []
      }
    },
    "/article-elements/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one article-elements record",
        "responses": {
          "200": {
            "description": "Retrieve article-elements document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Article-elements"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single article-elements record",
        "responses": {
          "200": {
            "description": "Retrieve article-elements document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Article-elements"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewArticle-elements"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single article-elements record",
        "responses": {
          "200": {
            "description": "deletes a single article-elements based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Article-elements"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banner-categories": {
      "get": {
        "deprecated": false,
        "description": "Find all the banner-categories's records",
        "responses": {
          "200": {
            "description": "Retrieve banner-categories document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner-categories"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new banner-categories record",
        "responses": {
          "200": {
            "description": "Retrieve banner-categories document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner-categories"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBanner-categories"
              }
            }
          }
        }
      }
    },
    "/banner-categories/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the number of banner-categories documents",
        "responses": {
          "200": {
            "description": "Retrieve banner-categories document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner-categories"
        ],
        "parameters": []
      }
    },
    "/banner-categories/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one banner-categories record",
        "responses": {
          "200": {
            "description": "Retrieve banner-categories document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner-categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single banner-categories record",
        "responses": {
          "200": {
            "description": "Retrieve banner-categories document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner-categories"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBanner-categories"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single banner-categories record",
        "responses": {
          "200": {
            "description": "deletes a single banner-categories based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner-categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banners": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBanner"
              }
            }
          }
        }
      }
    },
    "/banners/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner"
        ],
        "parameters": []
      }
    },
    "/banners/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBanner"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Banner"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/boards": {
      "get": {
        "deprecated": false,
        "description": "Find all the boards's records",
        "responses": {
          "200": {
            "description": "Retrieve boards document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Boards"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Boards"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new boards record",
        "responses": {
          "200": {
            "description": "Retrieve boards document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boards"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Boards"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBoards"
              }
            }
          }
        }
      }
    },
    "/boards/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the number of boards documents",
        "responses": {
          "200": {
            "description": "Retrieve boards document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Boards"
        ],
        "parameters": []
      }
    },
    "/boards/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one boards record",
        "responses": {
          "200": {
            "description": "Retrieve boards document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boards"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Boards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single boards record",
        "responses": {
          "200": {
            "description": "Retrieve boards document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boards"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Boards"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBoards"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single boards record",
        "responses": {
          "200": {
            "description": "deletes a single boards based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Boards"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          }
        }
      }
    },
    "/categories/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": []
      }
    },
    "/categories/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCategory"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/comments": {
      "get": {
        "deprecated": false,
        "description": "Find all the comments's records",
        "responses": {
          "200": {
            "description": "Retrieve comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comments"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new comments record",
        "responses": {
          "200": {
            "description": "Retrieve comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Comments"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewComments"
              }
            }
          }
        }
      }
    },
    "/comments/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the number of comments documents",
        "responses": {
          "200": {
            "description": "Retrieve comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Comments"
        ],
        "parameters": []
      }
    },
    "/comments/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one comments record",
        "responses": {
          "200": {
            "description": "Retrieve comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single comments record",
        "responses": {
          "200": {
            "description": "Retrieve comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Comments"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewComments"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single comments record",
        "responses": {
          "200": {
            "description": "deletes a single comments based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/news-contents": {
      "get": {
        "deprecated": false,
        "description": "Find all the news-contents's records",
        "responses": {
          "200": {
            "description": "Retrieve news-contents document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-contents"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new news-contents record",
        "responses": {
          "200": {
            "description": "Retrieve news-contents document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-contents"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNews-contents"
              }
            }
          }
        }
      }
    },
    "/news-contents/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the number of news-contents documents",
        "responses": {
          "200": {
            "description": "Retrieve news-contents document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-contents"
        ],
        "parameters": []
      }
    },
    "/news-contents/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one news-contents record",
        "responses": {
          "200": {
            "description": "Retrieve news-contents document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-contents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single news-contents record",
        "responses": {
          "200": {
            "description": "Retrieve news-contents document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-contents"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNews-contents"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single news-contents record",
        "responses": {
          "200": {
            "description": "deletes a single news-contents based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-contents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/news-papers": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-paper"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-paper"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNews-paper"
              }
            }
          }
        }
      }
    },
    "/news-papers/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-paper"
        ],
        "parameters": []
      }
    },
    "/news-papers/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-paper"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-paper"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNews-paper"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "News-paper"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/popups": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Popup"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Popup"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Popup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Popup"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPopup"
              }
            }
          }
        }
      }
    },
    "/popups/count": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Popup"
        ],
        "parameters": []
      }
    },
    "/popups/{id}": {
      "get": {
        "deprecated": false,
        "description": "",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Popup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Popup"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a record",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Popup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Popup"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPopup"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a record",
        "responses": {
          "200": {
            "description": "deletes a single record based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Popup"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/re-comments": {
      "get": {
        "deprecated": false,
        "description": "Find all the re-comments's records",
        "responses": {
          "200": {
            "description": "Retrieve re-comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Re-comments"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new re-comments record",
        "responses": {
          "200": {
            "description": "Retrieve re-comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Re-comments"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRe-comments"
              }
            }
          }
        }
      }
    },
    "/re-comments/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the number of re-comments documents",
        "responses": {
          "200": {
            "description": "Retrieve re-comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Re-comments"
        ],
        "parameters": []
      }
    },
    "/re-comments/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one re-comments record",
        "responses": {
          "200": {
            "description": "Retrieve re-comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Re-comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a single re-comments record",
        "responses": {
          "200": {
            "description": "Retrieve re-comments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Re-comments"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRe-comments"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single re-comments record",
        "responses": {
          "200": {
            "description": "deletes a single re-comments based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Re-comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/email/": {
      "post": {
        "deprecated": false,
        "description": "Send an email",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Email - Email"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/test": {
      "post": {
        "deprecated": false,
        "description": "Send an test email",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Email - Email"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/settings": {
      "get": {
        "deprecated": false,
        "description": "Get the email settings",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Email - Email"
        ],
        "parameters": []
      }
    },
    "/upload/": {
      "post": {
        "deprecated": false,
        "description": "Upload a file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/files/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the total number of uploaded files",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all file documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single file depending on its id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an uploaded file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/upload/search/{id}": {
      "get": {
        "deprecated": false,
        "description": "Search for an uploaded file",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a role depending on its id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all role documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsRole"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsRole"
              }
            }
          }
        }
      }
    },
    "/users-permissions/roles/{role}": {
      "put": {
        "deprecated": false,
        "description": "Update a role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsRole"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/search/{id}": {
      "get": {
        "deprecated": false,
        "description": "Search for users",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/connect/*": {
      "get": {
        "deprecated": false,
        "description": "Connect a provider",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/auth/local": {
      "post": {
        "deprecated": false,
        "description": "Login a user using the identifiers email and password",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/local/register": {
      "post": {
        "deprecated": false,
        "description": "Register a new user with the default role",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "deprecated": false,
        "description": "Successfull redirection after approving a provider",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "deprecated": false,
        "description": "Send the reset password email link",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "deprecated": false,
        "description": "Reset user password with a code (resetToken)",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "deprecated": false,
        "description": "Validate a user account",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "deprecated": false,
        "description": "Send a confirmation email to user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all user documents",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the logged in user information",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/users/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single user depending on his id",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update an existing user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an existing user",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "foo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Article-elements": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "expression": {
            "type": "boolean"
          },
          "complain": {
            "type": "boolean",
            "default": false
          },
          "scrap": {
            "type": "boolean",
            "default": false
          },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "board",
              "comment"
            ]
          },
          "type_id": {
            "type": "integer"
          },
          "user": {
            "required": [
              "id",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmationToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "남성",
                  "여성"
                ]
              },
              "birth_day": {
                "type": "string"
              },
              "post": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "enum": [
                  "한국",
                  "일본",
                  "기타 국가"
                ]
              },
              "nick_name": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewArticle-elements": {
        "properties": {
          "expression": {
            "type": "boolean"
          },
          "complain": {
            "type": "boolean",
            "default": false
          },
          "scrap": {
            "type": "boolean",
            "default": false
          },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "board",
              "comment"
            ]
          },
          "type_id": {
            "type": "integer"
          },
          "user": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Banner-categories": {
        "required": [
          "id",
          "category_name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "category_name": {
            "type": "string"
          },
          "banners": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "company_name",
                "main_banner_text",
                "contents",
                "position",
                "is_public",
                "priority"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "main_banner_text": {
                  "type": "string"
                },
                "sub_banner_text": {
                  "type": "string"
                },
                "small_banner_image": {
                  "type": "string"
                },
                "small_thumbnail_path": {
                  "type": "string"
                },
                "big_banner_image": {
                  "type": "string"
                },
                "big_thumbnail_path": {
                  "type": "string"
                },
                "site_url": {
                  "type": "string"
                },
                "contents": {
                  "type": "string"
                },
                "position": {
                  "type": "string",
                  "enum": [
                    "홈 화면",
                    "홈 화면(큰 배너)",
                    "사이드 화면",
                    "카테고리 페이지 상단"
                  ]
                },
                "is_public": {
                  "type": "boolean"
                },
                "contact_info": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                },
                "pdf_file": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "banner_category": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewBanner-categories": {
        "required": [
          "category_name"
        ],
        "properties": {
          "category_name": {
            "type": "string"
          },
          "banners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Banner": {
        "required": [
          "id",
          "company_name",
          "main_banner_text",
          "contents",
          "position",
          "is_public",
          "priority"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "main_banner_text": {
            "type": "string"
          },
          "sub_banner_text": {
            "type": "string"
          },
          "small_banner_image": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "alternativeText": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "formats": {
                "type": "object"
              },
              "hash": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "previewUrl": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "small_thumbnail_path": {
            "type": "string"
          },
          "big_banner_image": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "alternativeText": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "formats": {
                "type": "object"
              },
              "hash": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "previewUrl": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "big_thumbnail_path": {
            "type": "string"
          },
          "site_url": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "position": {
            "type": "string",
            "enum": [
              "홈 화면",
              "홈 화면(큰 배너)",
              "사이드 화면",
              "카테고리 페이지 상단"
            ]
          },
          "is_public": {
            "type": "boolean",
            "default": false
          },
          "contact_info": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "default": "0"
          },
          "pdf_file": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "hash",
                "mime",
                "size",
                "url",
                "provider"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "alternativeText": {
                  "type": "string"
                },
                "caption": {
                  "type": "string"
                },
                "width": {
                  "type": "integer"
                },
                "height": {
                  "type": "integer"
                },
                "formats": {
                  "type": "object"
                },
                "hash": {
                  "type": "string"
                },
                "ext": {
                  "type": "string"
                },
                "mime": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "previewUrl": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "provider_metadata": {
                  "type": "object"
                },
                "related": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "banner_category": {
            "required": [
              "id",
              "category_name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "category_name": {
                "type": "string"
              },
              "banners": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewBanner": {
        "required": [
          "company_name",
          "main_banner_text",
          "contents",
          "position",
          "is_public",
          "priority"
        ],
        "properties": {
          "company_name": {
            "type": "string"
          },
          "main_banner_text": {
            "type": "string"
          },
          "sub_banner_text": {
            "type": "string"
          },
          "small_thumbnail_path": {
            "type": "string"
          },
          "big_thumbnail_path": {
            "type": "string"
          },
          "site_url": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "position": {
            "type": "string",
            "enum": [
              "홈 화면",
              "홈 화면(큰 배너)",
              "사이드 화면",
              "카테고리 페이지 상단"
            ]
          },
          "is_public": {
            "type": "boolean",
            "default": false
          },
          "contact_info": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "default": "0"
          },
          "banner_category": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Boards": {
        "required": [
          "id",
          "title",
          "contents"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "writer": {
            "required": [
              "id",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmationToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "남성",
                  "여성"
                ]
              },
              "birth_day": {
                "type": "string"
              },
              "post": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "enum": [
                  "한국",
                  "일본",
                  "기타 국가"
                ]
              },
              "nick_name": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "writing_type": {
            "type": "string",
            "default": "normal",
            "enum": [
              "일반 게시물",
              "공지",
              "필독"
            ]
          },
          "color_type": {
            "type": "string",
            "default": "nothing",
            "enum": [
              "없음(일반게시물)",
              "파랑(#2f6fd4)",
              "빨강(#ff6666)",
              "검정(#333333)"
            ]
          },
          "is_delete": {
            "type": "boolean",
            "default": false
          },
          "category": {
            "required": [
              "id",
              "main_category",
              "sub_category"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "main_category": {
                "type": "string"
              },
              "sub_category": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          }
        }
      },
      "NewBoards": {
        "required": [
          "title",
          "contents"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "writer": {
            "type": "string"
          },
          "writing_type": {
            "type": "string",
            "default": "normal",
            "enum": [
              "일반 게시물",
              "공지",
              "필독"
            ]
          },
          "color_type": {
            "type": "string",
            "default": "nothing",
            "enum": [
              "없음(일반게시물)",
              "파랑(#2f6fd4)",
              "빨강(#ff6666)",
              "검정(#333333)"
            ]
          },
          "is_delete": {
            "type": "boolean",
            "default": false
          },
          "category": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Category": {
        "required": [
          "id",
          "main_category",
          "sub_category"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "main_category": {
            "type": "string"
          },
          "sub_category": {
            "type": "string"
          }
        }
      },
      "NewCategory": {
        "required": [
          "main_category",
          "sub_category"
        ],
        "properties": {
          "main_category": {
            "type": "string"
          },
          "sub_category": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Comments": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "re_comments": {
            "type": "array",
            "items": {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "contents": {
                  "type": "string"
                },
                "hash_user": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "news",
                    "board"
                  ]
                },
                "type_id": {
                  "type": "integer"
                },
                "is_delete": {
                  "type": "boolean"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "board"
            ]
          },
          "type_id": {
            "type": "integer"
          },
          "user": {
            "required": [
              "id",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmationToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "남성",
                  "여성"
                ]
              },
              "birth_day": {
                "type": "string"
              },
              "post": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "enum": [
                  "한국",
                  "일본",
                  "기타 국가"
                ]
              },
              "nick_name": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "is_delete": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "NewComments": {
        "properties": {
          "contents": {
            "type": "string"
          },
          "re_comments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "board"
            ]
          },
          "type_id": {
            "type": "integer"
          },
          "user": {
            "type": "string"
          },
          "is_delete": {
            "type": "boolean",
            "default": false
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "News-contents": {
        "required": [
          "id",
          "title",
          "contents",
          "is_public",
          "is_public_reporter_email",
          "source_type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "thumbnail": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "alternativeText": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "formats": {
                "type": "object"
              },
              "hash": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "previewUrl": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "thumbnail_path": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean",
            "default": true
          },
          "news_expected_date": {
            "type": "string",
            "format": "date-time"
          },
          "reporter": {
            "required": [
              "id",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "firstname": {
                "type": "string"
              },
              "lastname": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "registrationToken": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "blocked": {
                "type": "boolean"
              },
              "preferedLanguage": {
                "type": "string"
              }
            }
          },
          "is_public_reporter_email": {
            "type": "boolean",
            "default": false
          },
          "source_type": {
            "type": "string",
            "default": "연합뉴스",
            "enum": [
              "뉴스 출처 없음",
              "연합뉴스"
            ]
          },
          "priority": {
            "type": "integer",
            "default": "0"
          }
        }
      },
      "NewNews-contents": {
        "required": [
          "title",
          "contents",
          "is_public",
          "is_public_reporter_email",
          "source_type"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "thumbnail_path": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean",
            "default": true
          },
          "news_expected_date": {
            "type": "string",
            "format": "date-time"
          },
          "reporter": {
            "type": "string"
          },
          "is_public_reporter_email": {
            "type": "boolean",
            "default": false
          },
          "source_type": {
            "type": "string",
            "default": "연합뉴스",
            "enum": [
              "뉴스 출처 없음",
              "연합뉴스"
            ]
          },
          "priority": {
            "type": "integer",
            "default": "0"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "News-paper": {
        "required": [
          "id",
          "title",
          "is_public"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "pdf_file": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "alternativeText": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "formats": {
                "type": "object"
              },
              "hash": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "previewUrl": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "thumbnail": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "alternativeText": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "formats": {
                "type": "object"
              },
              "hash": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "previewUrl": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "is_public": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "NewNews-paper": {
        "required": [
          "title",
          "is_public"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean",
            "default": true
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Popup": {
        "required": [
          "id",
          "name",
          "is_link",
          "is_public",
          "bg_color",
          "image",
          "width",
          "height"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "is_link": {
            "type": "boolean",
            "default": false
          },
          "is_public": {
            "type": "boolean",
            "default": false
          },
          "bg_color": {
            "type": "string",
            "default": "#FFFFFF"
          },
          "image": {
            "required": [
              "id",
              "name",
              "hash",
              "mime",
              "size",
              "url",
              "provider"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "alternativeText": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "width": {
                "type": "integer"
              },
              "height": {
                "type": "integer"
              },
              "formats": {
                "type": "object"
              },
              "hash": {
                "type": "string"
              },
              "ext": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "previewUrl": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "provider_metadata": {
                "type": "object"
              },
              "related": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "width": {
            "type": "integer",
            "default": 1440
          },
          "height": {
            "type": "integer",
            "default": 152
          }
        }
      },
      "NewPopup": {
        "required": [
          "name",
          "is_link",
          "is_public",
          "bg_color",
          "width",
          "height"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "is_link": {
            "type": "boolean",
            "default": false
          },
          "is_public": {
            "type": "boolean",
            "default": false
          },
          "bg_color": {
            "type": "string",
            "default": "#FFFFFF"
          },
          "width": {
            "type": "integer",
            "default": 1440
          },
          "height": {
            "type": "integer",
            "default": 152
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Re-comments": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "hash_user": {
            "required": [
              "id",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmationToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "남성",
                  "여성"
                ]
              },
              "birth_day": {
                "type": "string"
              },
              "post": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "enum": [
                  "한국",
                  "일본",
                  "기타 국가"
                ]
              },
              "nick_name": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "comment": {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "re_comments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "news",
                  "board"
                ]
              },
              "type_id": {
                "type": "integer"
              },
              "user": {
                "type": "string"
              },
              "is_delete": {
                "type": "boolean"
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "board"
            ]
          },
          "type_id": {
            "type": "integer"
          },
          "is_delete": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "NewRe-comments": {
        "properties": {
          "contents": {
            "type": "string"
          },
          "hash_user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "news",
              "board"
            ]
          },
          "type_id": {
            "type": "integer"
          },
          "is_delete": {
            "type": "boolean",
            "default": false
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "UsersPermissionsRole": {
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "type",
                "controller",
                "action",
                "enabled"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "controller": {
                  "type": "string"
                },
                "action": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "policy": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "email"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "resetPasswordToken": {
                  "type": "string"
                },
                "confirmationToken": {
                  "type": "string"
                },
                "confirmed": {
                  "type": "boolean"
                },
                "blocked": {
                  "type": "boolean"
                },
                "role": {
                  "type": "string"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "남성",
                    "여성"
                  ]
                },
                "birth_day": {
                  "type": "string"
                },
                "post": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "enum": [
                    "한국",
                    "일본",
                    "기타 국가"
                  ]
                },
                "nick_name": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NewUsersPermissionsRole": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "UsersPermissionsUser": {
        "required": [
          "id",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "minLength": 2
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "gender": {
            "type": "string",
            "enum": [
              "남성",
              "여성"
            ]
          },
          "birth_day": {
            "type": "string",
            "format": "date"
          },
          "post": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "enum": [
              "한국",
              "일본",
              "기타 국가"
            ]
          },
          "nick_name": {
            "type": "string",
            "minLength": 2
          }
        }
      },
      "NewUsersPermissionsUser": {
        "required": [
          "email"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 2
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6
          },
          "resetPasswordToken": {
            "type": "string"
          },
          "confirmationToken": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "남성",
              "여성"
            ]
          },
          "birth_day": {
            "type": "string",
            "format": "date"
          },
          "post": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "enum": [
              "한국",
              "일본",
              "기타 국가"
            ]
          },
          "nick_name": {
            "type": "string",
            "minLength": 2
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Banner"
    },
    {
      "name": "Boards"
    },
    {
      "name": "Category"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Popup"
    },
    {
      "name": "Email - Email"
    },
    {
      "name": "Upload - File"
    },
    {
      "name": "UsersPermissions - Role"
    },
    {
      "name": "UsersPermissions - User"
    }
  ]
}